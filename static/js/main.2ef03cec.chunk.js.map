{"version":3,"sources":["App.js","index.js"],"names":["quotesData","App","state","myQuote","fetch","response","json","data","this","setState","quotes","Math","floor","random","length","$","animate","opacity","text","quote","html","author","setTimeout","color","setRandomColor","id","className","style","document","body","backgroundColor","type","onPress","openURL","onClick","update","href","React","Component","colors","url","window","open","ReactDOM","render","StrictMode","getElementById"],"mappings":"uKA8FIA,E,mHA1FiBC,E,kDAEnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,QAAS,cAJC,E,wLAUA,yI,SACWC,MADX,0I,cACNC,E,gBACaA,EAASC,O,OAAtBC,E,OACNP,EAAaO,EACbC,KAAKC,SAAS,CAACN,QAASH,EAAWU,OAAOC,KAAKC,MAAMD,KAAKE,SAAWb,EAAWU,OAAOI,W,qIAI/E,IAAD,OAEHD,EAASF,KAAKC,MAAMD,KAAKE,SAAWb,EAAWU,OAAOI,QAG1DC,IAAE,eAAeC,QACf,CAAEC,QAAS,GACX,KACA,WACEF,IAAEP,MAAMQ,QAAQ,CAAEC,QAAS,GAAI,KAC/BF,IAAE,SAASG,KAAKlB,EAAWU,OAAOG,GAAQM,UAI9CJ,IAAE,iBAAiBC,QACjB,CAAEC,QAAS,GACX,KACA,WACEF,IAAEP,MAAMQ,QAAQ,CAAEC,QAAS,GAAI,KAC/BF,IAAE,WAAWK,KAAK,KAAOpB,EAAWU,OAAOG,GAAQQ,WAKvDC,YAAW,WAAQ,EAAKb,SAAS,CAACc,MAAOC,IAAkBrB,QAASH,EAAWU,OAAOG,OAAa,O,+BAG3F,IAAD,OACT,OACE,yBAAKY,GAAG,QACR,yBAAKA,GAAG,aACR,yBAAKC,UAAY,cACf,uBAAGC,MAAO,CAACJ,MAAOK,SAASC,KAAKF,MAAMG,kBAAmB,0BAAML,GAAG,QAAQjB,KAAKN,MAAMC,QAAQgB,SAE7F,yBAAKO,UAAU,gBACf,uBAAGC,MAAO,CAACJ,MAAOK,SAASC,KAAKF,MAAMG,kBAAmB,0BAAML,GAAG,UAAT,KAAqBjB,KAAKN,MAAMC,QAAQkB,UAEjG,yBAAKK,UAAU,YACf,yBAAKA,UAAU,WAEf,kBAAC,sBAAD,CACEK,KAAK,SACLJ,MAAO,CAACG,gBAAiBF,SAASC,KAAKF,MAAMG,iBAAkBE,QAAS,kBAAKC,EAAQ,yCAFvF,QAIA,0BAAMN,MAAO,CAACJ,MAAO,UAArB,KAEA,kBAAC,sBAAD,CACEQ,KAAK,UAAUC,QAAS,kBAAKC,EAAQ,8EAAgF,EAAK/B,MAAMC,QAAQgB,MAAQ,KAChJ,EAAKjB,MAAMC,QAAQkB,SAAUM,MAAO,CAACG,gBAAiBF,SAASC,KAAKF,MAAMG,kBAF5E,UAMA,4BAAQJ,UAAU,UAAUC,MAAO,CAACG,gBAAiBF,SAASC,KAAKF,MAAMG,iBAAkBI,QAAS,WAAO,EAAKC,WAAhH,cAEF,gCAAQ,uBAAGC,KAAK,+BAAR,iB,GA1EqBC,IAAMC,WAgFvC,SAASd,IACP,IAAIe,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvIX,SAASC,KAAKF,MAAMG,gBAAkBS,EAAO5B,KAAKC,MAAMD,KAAKE,SAAW0B,EAAOzB,SAGjF,SAASmB,EAAQO,GACfC,OAAOC,KAAKF,EAAK,QAAS,kGCrF5BG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjB,SAASkB,eAAe,W","file":"static/js/main.2ef03cec.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport { AwesomeButtonSocial } from \"react-awesome-button\";\r\n\r\nexport default class App extends React.Component {\r\n  \r\n  constructor() {\r\n    super()\r\n  \r\n    this.state = {\r\n      myQuote: \"Loading...\",\r\n    }\r\n  }\r\n\r\n  // fetching data from an online JSON file\r\n  async componentDidMount() {\r\n    const url = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    quotesData = data;\r\n    this.setState({myQuote: quotesData.quotes[Math.floor(Math.random() * quotesData.quotes.length)]});\r\n  }\r\n\r\n  // function for dynamically changing data \r\n  update() {\r\n\r\n    let random = Math.floor(Math.random() * quotesData.quotes.length);\r\n\r\n    // using jQuery's animate for the quote's text and author\r\n    $(\".quote-text\").animate(\r\n      { opacity: 0 },\r\n      500,\r\n      function() {\r\n        $(this).animate({ opacity: 1}, 500);\r\n        $('#text').text(quotesData.quotes[random].quote);\r\n      }\r\n    );\r\n  \r\n    $(\".quote-author\").animate(\r\n      { opacity: 0 },\r\n      500,\r\n      function() {\r\n        $(this).animate({ opacity: 1}, 500);\r\n        $('#author').html(\"- \" + quotesData.quotes[random].author);\r\n      }\r\n    );\r\n\r\n    // dynamically change color\r\n    setTimeout(() => { this.setState({color: setRandomColor(), myQuote: quotesData.quotes[random]}) }, 500);\r\n    }\r\n\r\n  render() {\r\n  return (\r\n    <div id=\"full\">\r\n    <div id=\"quote-box\">\r\n    <div className = \"quote-text\">\r\n      <p style={{color: document.body.style.backgroundColor }}><span id=\"text\">{this.state.myQuote.quote}</span></p></div>\r\n      \r\n      <div className=\"quote-author\">\r\n      <p style={{color: document.body.style.backgroundColor }}><span id=\"author\">- {this.state.myQuote.author}</span></p></div>\r\n      \r\n      <div className=\"buttons\"></div>\r\n      <div className=\"awesome\">     \r\n      {/*Share the random quote machine!*/}\r\n      <AwesomeButtonSocial\r\n        type=\"github\"\r\n        style={{backgroundColor: document.body.style.backgroundColor}} onPress={()=> openURL('https://github.com/1v4n1v4n/machine')}\r\n      >Fork</AwesomeButtonSocial>\r\n      <span style={{color: \"white\"}}>I</span>\r\n      {/*Tweet the quote displayed...*/}\r\n      <AwesomeButtonSocial\r\n        type=\"twitter\" onPress={()=> openURL('https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + this.state.myQuote.quote + '\" ' + \r\n        this.state.myQuote.author)}  style={{backgroundColor: document.body.style.backgroundColor }}\r\n      >Tweet</AwesomeButtonSocial>\r\n      </div>\r\n\r\n      <button className=\"button1\" style={{backgroundColor: document.body.style.backgroundColor}} onClick={() => {this.update()}}>New Quote</button>\r\n    </div> \r\n    <footer><a href=\"https://github.com/1v4n1v4n\">by 1v4n</a></footer>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n// function for getting a random color from an array\r\nfunction setRandomColor() {\r\n  var colors = ['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\r\n  document.body.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\r\n}\r\n// needed function for the share option\r\nfunction openURL(url){\r\n  window.open(url, 'Share', 'width=550, height=400, toolbar=0, scrollbars=1 ,location=0 ,statusbar=0,menubar=0, resizable=0');\r\n}\r\n\r\n// needed variable for saving the fetched data\r\nlet quotesData;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}